---
import client from '../lib/apolloClient';
import { Image } from 'astro:assets';
import { GET_SITE_SETTINGS } from '../lib/queries';
import Navigation from './Navigation.astro';

const { data } = await client.query({
  query: GET_SITE_SETTINGS,
});

const siteSettings = data?.customSiteSettings;

const images = import.meta.glob('../../assets/images/logos/*.{jpg,jpeg,png,webp,avif}');

async function getImageUrl(imagePath) {
  if (images[imagePath]) {
    const imageModule = await images[imagePath]();
    return imageModule.default;
  }
  return null;
}

const logoUrl = siteSettings?.logo?.sourceUrl ? await getImageUrl(`../../assets/images/logos/${siteSettings.logo.sourceUrl.split('/').pop()}`) : null;
const logoWidth = siteSettings?.logo?.mediaDetails?.width || 150;
const logoHeight = siteSettings?.logo?.mediaDetails?.height || 150;
const mobileLogoUrl = siteSettings?.mobileLogo?.sourceUrl ? await getImageUrl(`../../assets/images/logos/${siteSettings.mobileLogo.sourceUrl.split('/').pop()}`) : null;
const mobileLogoWidth = siteSettings?.mobileLogo?.mediaDetails?.width || 150;
const mobileLogoHeight = siteSettings?.mobileLogo?.mediaDetails?.height || 150;
const siteTitle = siteSettings?.siteTitle || 'Logo';

// Define the widths for responsive images
const widths = [240, 320, 640, 768, 1024];

// Define the formats to generate (e.g., webp, avif, jpg)
const formats = ['avif', 'webp', 'jpg'];

// Define the sizes attribute to make the image full width of the viewport
const sizes = "100vw"; // This ensures the image takes up 100% of the viewport width
---

<div class="mx-auto top-header">
  <div class="flex items-center justify-center">
    <button
      id="menu-toggle"
      class="w-10 py-2 ml-2 text-4xl lg:hidden"
      aria-label="Toggle Menu"
    >
      <span id="menu-icon" class="icon-[mdi--menu]"></span>
    </button>
    <a href="/">
    {logoUrl && (
      <Image
        src={logoUrl}
        alt={siteTitle}
        width={logoWidth}
        height={logoHeight}
        sizes={sizes}
        formats={formats}
        widths={widths}
        loading="eager"
        class="hidden logo-desktop lg:block"
      />
    )}
    {mobileLogoUrl && (
      <Image
        src={mobileLogoUrl}
        alt={siteTitle}
        width={mobileLogoWidth}
        height={mobileLogoHeight}
        sizes={sizes}
        formats={formats}
        widths={widths}
        loading="eager"
        class="w-full lg:hidden logo-mobile"
      />
    )}
    </a>
  </div>
  <nav id="main-nav" class="hidden lg:block">
    <Navigation class="flex-wrap p-0 mx-auto list-none lg:flex main-menu md:justify-center" />
  </nav>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuToggle = document.getElementById('menu-toggle');
    const menuIcon = document.getElementById('menu-icon');
    const mainNav = document.getElementById('main-nav');
    if (!menuToggle || !menuIcon || !mainNav) return;

    menuToggle.addEventListener('click', () => {
      const isExpanded = mainNav.classList.contains('block');
      mainNav.classList.toggle('block', !isExpanded);
      mainNav.classList.toggle('hidden', isExpanded);
      menuIcon.classList.toggle('icon-[mdi--menu]', isExpanded);
      menuIcon.classList.toggle('icon-[mdi--close]', !isExpanded);
    });
  });
</script>

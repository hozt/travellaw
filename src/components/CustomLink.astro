---
const { url, label, classes, indicator } = Astro.props;
const apiUrl = import.meta.env.API_URL;

function hasClassNoLink(classes) {
  return classes && classes.includes("no-link");
}

function isExternalUrl(url) {
  return /^(https?:|mailto:|tel:)/.test(url);
}

let adjustedUrl = url ? url.replace(apiUrl, '') : url;
const linkClasses = classes ? classes.join(' ') : '';

---

{!hasClassNoLink(classes) ? (
  isExternalUrl(adjustedUrl) ? (
    <a href={adjustedUrl} target="_blank" rel="noopener noreferrer" class={linkClasses}>
      {label} {indicator && <span class="indicator"></span>}
    </a>
  ) : (
    <a href={adjustedUrl} class={linkClasses}>
      {label} {indicator && <span class="indicator"></span>}
    </a>
  )
) : (
  <span class={linkClasses}>
    {label} {indicator && <span class="indicator"></span>}
  </span>
)}

<script>
  if (typeof window !== 'undefined') {
    const currentPath = window.location.pathname;
    const links = document.querySelectorAll('a[href]');

    links.forEach(link => {
      if (link.getAttribute('href') === currentPath) {
        link.classList.add('active');
      }
    });
  }
</script>

---
import { Image } from 'astro:assets';
import Breadcrumb from './Breadcrumb.astro';
import { getImages } from '../lib/utils';
import client from '../lib/apolloClient';
import { GET_SITE_SETTINGS } from '../lib/queries';

const { data } = await client.query({
  query: GET_SITE_SETTINGS,
});

const siteSettings = data?.customSiteSettings;
const headerSourceUrl = siteSettings?.defaultHeaderImage?.sourceUrl;
const breadcrumbPosition = import.meta.env.BREADCRUMB_POSITION || 'bottom';
const breadcrumbSeparator = import.meta.env.BREADCRUMB_SEPARATOR || '|';
const { title, subtitle, tagLine, image, width, height, crumbs=[] } = Astro.props;

let imageLocal = null;
let defaultHeader = false;
if (image) {
  imageLocal = await getImages('banners', image);
} else if (headerSourceUrl) {
  defaultHeader = true;
  imageLocal = await getImages('banners', headerSourceUrl);
}

const alt = title;
const widths = [768, 1024, 1440, 2000];
const formats = ['avif', 'webp', 'jpg'];
const sizes = "100vw";
---

{ (breadcrumbPosition === 'top' && !imageLocal) && <Breadcrumb crumbs={crumbs} separator={breadcrumbSeparator} /> }
<div class={`banner overflow-hidden relative ${imageLocal ? 'banner-image' : 'no-banner-image'} ${defaultHeader ? 'default-banner' : ''}`}>
  {imageLocal && (
    <Image
      src={imageLocal.default}
      widths={widths}
      formats={formats}
      sizes={sizes}
      alt={alt}
      class=`object-cover w-full h-full animate-zoom-out`
      decoding="async"
      loading="eager"
    />
  )}
  <div class={`banner-text flex flex-col items-center justify-center inset-0 ${imageLocal ? 'absolute' : ''}`}>
    {tagLine && <div class="tag-line">{tagLine}</div>}
    <h1>{title}</h1>
    {subtitle && <h2>{subtitle}</h2>}
    { breadcrumbPosition === 'middle' && <Breadcrumb crumbs={crumbs} separator={breadcrumbSeparator} /> }
  </div>
</div>
{ breadcrumbPosition === 'bottom' || (imageLocal && breadcrumbPosition !== 'middle') && <Breadcrumb crumbs={crumbs} separator={breadcrumbSeparator} /> }

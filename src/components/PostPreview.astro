---
import { Image } from 'astro:assets';
import { localImage } from '../lib/utils';
const { post, isLast, path } = Astro.props;

const {
  title,
  excerpt,
  slug,
  featuredImage
} = post;

const imageUrl = featuredImage?.node?.sourceUrl;
let imageLocal = '';
if (imageUrl) {
    imageLocal = localImage(imageUrl, 'featured');
}
const altText = featuredImage?.node?.altText || title;
const imageWidth = featuredImage?.node?.mediaDetails?.width;
const imageHeight = featuredImage?.node?.mediaDetails?.height;

const images = import.meta.glob('../../assets/images/featured/*.{jpg,jpeg,png,webp,avif}');

async function getImageModule(imagePath) {
  if (!imagePath) return null;
  const relativePath = `../../assets/images/featured/${imagePath.split('/').pop()}`;
  if (images[relativePath]) {
    const imageModule = await images[relativePath]();
    return imageModule;
  }
  return null;
}

const featuredImageModule = await getImageModule(imageUrl);
---

<div key={post.databaseId} class="flex pb-4 mb-4 border-b-2 post-preview last:border-none blog-post">
  {featuredImageModule && (
    <div>
      <a href={`/${path}/${slug}`}>
        <Image
          src={featuredImageModule.default}
          alt={altText}
          width={imageWidth}
          height={imageHeight}
          class="post-preview-image"
        />
      </a>
    </div>
  )}

  <div class={`post-content ${featuredImageModule ? 'has-image' : ''}`}>
    <div class="text-lg font-semibold post-title"><a href={`/${path}/${slug}`} class="no-link">{title}</a></div>
    <div class="post-excerpt" set:html={excerpt} />
    <div class="post-read-more">
      <a href={`/${path}/${slug}`} class="read-more">Read More</a>
    </div>
  </div>
</div>
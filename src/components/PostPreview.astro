---
import { Image } from 'astro:assets';
import { getImages } from '../lib/utils';
import { getDefaultFeaturedImage } from '../lib/fetchSiteSettings.js';
import CustomLink from './CustomLink.astro';

const defaultFeaturedImage = await getDefaultFeaturedImage();
const { post, path, classes } = Astro.props;
const postAlias = path || import.meta.env.POST_ALIAS;

const {
  title,
  excerpt,
  slug,
  featuredImage
} = post;

const imageUrl = featuredImage?.node?.sourceUrl;
let imageLocal = null;
if (imageUrl) {
    imageLocal = await getImages('featured', imageUrl);
} else if (defaultFeaturedImage) {
    imageLocal = await getImages('featured', defaultFeaturedImage);
} else {
    imageLocal = null;
}

const altText = featuredImage?.node?.altText || title;
// remove https:// and http:// from the linkUrl also remove the trailing / if is present
const linkUrl = post.linkUrl ? post.linkUrl.replace(/(^\w+:|^)\/\//, '').replace(/\/$/, '') : null;
---
<div class="post-preview-wrapper">
  <div class={classes}>
    {imageLocal && (
      <div class="featured-image-wrapper">
        <div class="featured-image">
          <a href={`/${postAlias}/${slug}/`}>
            <Image
              src={imageLocal.default}
              alt={altText}
              width={400}
              inferSize
              loading="lazy"
            />
          </a>
        </div>
      </div>
    )}

    <div class={`post-content ${imageLocal ? 'has-image' : ''}`}>
      <div class="post-title">
        <CustomLink url={`/${postAlias}/${slug}/`} label={title} />
      </div>
      { linkUrl && (<div class="post-link">{linkUrl}</div>) }
      <div class="post-excerpt" set:html={excerpt} />
    </div>
  </div>
</div>
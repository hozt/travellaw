---
import client from '../lib/apolloClient';
import { GET_MENU_ITEMS } from '../lib/queries';
import CustomLink from './CustomLink.astro';

const { data } = await client.query({
  query: GET_MENU_ITEMS,
  variables: { first: 200 },
});

const menuItems = data?.menuItems?.nodes;

if (!menuItems) {
  throw new Error('No menu items found.');
}

function getClassNames(item) {
  const menuClass = `menu-${item.label.replace(/ /g, '-').toLowerCase()}`;
  return `${item.cssClasses?.join(' ') || ''} ${item.childItems?.nodes?.length > 0 ? 'group ' : ''}${menuClass}`;
}
---

<ul class="main-menu">
  {menuItems.map(item => item.parentDatabaseId === 0 && (
    <li class={`menu-item ${getClassNames(item)}`} key={item.id}>
      <CustomLink url={item.url} label={item.label} classes={item.cssClasses} indicator={item.childItems?.nodes?.length > 0} />
      {item.childItems?.nodes?.length > 0 && (
        <ul class="sub-menu">
          {item.childItems.nodes.map(child => (
            <li class={child.cssClasses?.join(' ') || ''} key={child.id}>
              <CustomLink url={child.url} label={child.label} classes={child.cssClasses} />
            </li>
          ))}
        </ul>
      )}
    </li>
  ))}
</ul>

<style>
.menu-item {
  @apply relative;
}

.sub-menu {
  @apply hidden md:absolute md:left-0 md:top-full md:z-50;
}

.menu-item:hover .sub-menu,
.menu-item:focus-within .sub-menu,
.menu-item.active .sub-menu {
  @apply block;
}

@media (max-width: 767px) {
  .sub-menu {
    @apply static bg-transparent shadow-none p-0;
  }
}
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const menuItems = document.querySelectorAll('.menu-item');
    const isMobile = window.innerWidth <= 767;

    menuItems.forEach(item => {
      const link = item.querySelector('a');
      const submenu = item.querySelector('.sub-menu');

      if (submenu) {
        if (isMobile) {
          link.addEventListener('click', function(e) {
            e.preventDefault();
            item.classList.toggle('active');
            submenu.style.display = item.classList.contains('active') ? 'block' : 'none';
          });
        } else {
          item.addEventListener('touchstart', function(e) {
            if (!item.classList.contains('active')) {
              e.preventDefault();
              menuItems.forEach(otherItem => {
                if (otherItem !== item) {
                  otherItem.classList.remove('active');
                  otherItem.querySelector('.sub-menu')?.style.removeProperty('display');
                }
              });
              item.classList.add('active');
              submenu.style.display = 'block';
            }
          });
        }
      }
    });

    // Close submenu if clicked outside
    document.addEventListener('touchstart', function(e) {
      if (!e.target.closest('.menu-item')) {
        menuItems.forEach(item => {
          item.classList.remove('active');
          item.querySelector('.sub-menu')?.style.removeProperty('display');
        });
      }
    }, { passive: true });
  });
</script>
---
// /pages/[...slug].astro
import client from '../lib/apolloClient';
import { GET_PAGES, GET_PAGE } from '../lib/queries';
import Layout from '../layouts/Layout.astro';
import BannerTitle from '../components/BannerTitle.astro';
import { replaceImageUrls } from '../lib/utils';
import { getImages, replaceIconShortcode } from '../lib/utils';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  let { data } = await client.query({
    query: GET_PAGES,
    variables: { first: 200 },
  });

  return data.pages.nodes.map(page => {
    const slugArray = page.uri.split('/').filter(Boolean);
    return {
      params: { slug: slugArray.join('/') },
      props: { page },
    };
  });
}

const { slug } = Astro.params; // This is a string in Astro

const { data: pagesData } = await client.query({
  query: GET_PAGE,
  variables: { uri: slug },
});

const page = pagesData?.pageBy;

if (!page) {
  return {
    status: 404,
    error: new Error(`Page not found for slug: ${slug}`),
  };
}

const {
  title,
  subtitle,
  content,
  bannerImage,
  metaDescription,
  databaseId
} = page;

const featuredImage = page?.featuredImage?.node;

let localImage = null;
if (featuredImage?.sourceUrl) {
  localImage = await getImages('featured', featuredImage.sourceUrl);
}

let updatedContent = await replaceImageUrls(content);
updatedContent = replaceIconShortcode(updatedContent);
---

<Layout pageId={databaseId} title={title} description={metaDescription} classes="page">
  <BannerTitle
    title={title}
    subtitle={subtitle}
    image={bannerImage?.sourceUrl}
    width={bannerImage?.mediaDetails?.width}
    height={bannerImage?.mediaDetails?.height}
    crumbs={[{ label: title }]}
  />
  <div class="main-body content">
    {localImage && (
      <Image
        src={localImage.default}
        alt={featuredImage?.altText || title}
        width={featuredImage?.mediaDetails?.width}
        height={featuredImage?.mediaDetails?.height}
        class="featured-image"
      />
    )}
    <div set:html={updatedContent} />
  </div>
</Layout>
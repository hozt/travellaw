---
import Layout from '../layouts/Layout.astro';
import BannerTitle from '../components/BannerTitle.astro';
import client from '../lib/apolloClient';
import { replaceImageUrls, replaceIconShortcode, replaceShortCodes } from '../lib/utils';
import { GET_PAGE, GET_TAG_LINE } from '../lib/queries';

const components = await import.meta.glob('../componentsSite/index.astro', { eager: true });
const ComponentSite = components['../componentsSite/index.astro']?.default || null;

// Parallel GraphQL queries
const [pageResponse, tagLineResponse] = await Promise.all([
  client.query({
    query: GET_PAGE,
    variables: { uri: '/' },
  }),
  client.query({
    query: GET_TAG_LINE,
  })
]);

if (!pageResponse?.data?.pageBy) {
  throw new Error('No page data found for homepage');
}

// Destructure with default values for safety
const {
  title = '',
  subtitle = '',
  content = '',
  bannerImage = {},
  metaTitle = '',
  metaDescription = '',
  databaseId = '',
  customJs = ''
} = pageResponse.data.pageBy;

// Process content transformations in parallel
const processContent = async (content: string) => {
  if (!content) return '';

  const withImages = await replaceImageUrls(content);
  const withIcons = replaceIconShortcode(withImages);
  return replaceShortCodes(withIcons);
};

let updatedContent = await processContent(content);
const tagLine = tagLineResponse?.data?.customSiteSettings?.tagLine || '';

// Compute banner image props once
const bannerProps = {
  title,
  subtitle,
  tagLine,
  image: bannerImage?.sourceUrl || '',
  width: bannerImage?.mediaDetails?.width || 0,
  height: bannerImage?.mediaDetails?.height || 0,
};

---

<Layout
  title={metaTitle || title}
  subtitle={subtitle}
  classes="front"
  pageId={databaseId}
  description={metaDescription}
  customJs={customJs}
>
  <BannerTitle {...bannerProps} />
  <div class="main-body">
    {ComponentSite
      ? <ComponentSite content={ updatedContent } />
      : <div class="content" set:html={ updatedContent } />
    }
  </div>
</Layout>

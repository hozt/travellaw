---
import Layout from "../../../layouts/Layout.astro";
import BannerTitle from "../../../components/BannerTitle.astro";
import PostPreview from "../../../components/PostPreview.astro";
import client from "../../../lib/apolloClient";
import { getAllResults } from "../../../lib/fetchAllResults";
import { isEnabled } from '../../../lib/enabledFeatures';
import {
    GET_PORTFOLIOS_BY_TAG,
    GET_TAGS,
    GET_TEMPLATE,
} from "../../../lib/queries";

export async function getStaticPaths() {
  if (!await isEnabled('portfolio')) {
    return [];
  }
  const tags = await getAllResults(GET_TAGS);

  return tags.map((page) => ({
    params: { slug: page.slug },
    props: { page }
  }));
}

const { data: templateData } = await client.query({
  query: GET_TEMPLATE,
  variables: { slug: "tags" },
});

const { slug } = Astro.params;

const { data } = await client.query({
    query: GET_PORTFOLIOS_BY_TAG,
    variables: { slug },
});

const page = templateData.templateBy;

const posts = data?.tag?.portfolios?.nodes;
const tagName = data?.tag?.name;
const tagDescription = data?.tag?.description;
const classList = 'tag tag-' + tagName.toLowerCase().replace(" ", "-");
const title = tagName || page?.title;

if (!posts) {
  return {
    status: 404,
    error: new Error(`No posts found for tag ${slug}`),
  };
}

---

<Layout title={title} description={page?.metaDescription} classes={classList} >
  <BannerTitle
    title={title}
    subtitle={page?.subtitle}
    image={page?.bannerImage?.sourceUrl}
    width={page?.bannerImage?.mediaDetails.width}
    height={page?.bannerImage?.mediaDetails.height}
    crumbs={[{ label: "Portfolio", path: "/portfolio/"}, { label: "Tag" }, { label: title }]}
  />
  { tagDescription && <div class="container tag-description" set:html={tagDescription} /> }
  <div class="main-body">
    <div class="category">
      {
        posts.map((post) => (
          <PostPreview key={post.databaseId} post={post} path="portfolio" classes="post-preview" />
        ))
      }
    </div>
  </div>
</Layout>
